{
  "decks": [
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.c",
      "id": 2
    },
    {
      "id": 34,
      "name": "Animals",
      "description": "Animals Deck"
    },
    {
      "id": 30,
      "name": "Rendering In React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    }
  ],
  "cards": [
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "id": 568,
      "front": "Question 3",
      "back": "Answer 3",
      "deckId": 2
    },
    {
      "id": 488,
      "front": "Question 1",
      "back": "Answer 1",
      "deckId": 34
    },
    {
      "id": 853,
      "front": "Question 2",
      "back": "Answer 2",
      "deckId": 34
    },
    {
      "id": 542,
      "front": "Question 3",
      "back": "Answer 3",
      "deckId": 34
    },
    {
      "id": 499,
      "front": "Question 4",
      "back": "Answer 4",
      "deckId": 2
    },
    {
      "id": 654,
      "front": "Differentiate between Real DOM and Virtual DOM.",
      "back": "Virtual DOM updates are faster but do not directly update the HTML",
      "deckId": 30
    },
    {
      "id": 854,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 30
    },
    {
      "id": 855,
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": 30
    },
    {
      "id": 181,
      "front": "What path will match the follow Route?\\n<Route>\\n  <NotFound />\\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 30
    },
    {
      "id": 798,
      "front": "Question 5",
      "back": "Answer 5",
      "deckId": 2
    }
  ]
}